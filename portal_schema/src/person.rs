//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "person")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub person_id: i32,
    pub first_name: String,
    pub last_name: String,
    pub document_number: String,
    pub document_type_id: i32,
    pub gender_id: i32,
    pub signature: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::person_document_type::Entity",
        from = "Column::DocumentTypeId",
        to = "super::person_document_type::Column::PersonDocumentTypeId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PersonDocumentType,
    #[sea_orm(
        belongs_to = "super::person_gender::Entity",
        from = "Column::GenderId",
        to = "super::person_gender::Column::PersonGenderId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PersonGender,
}

impl Related<super::person_document_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PersonDocumentType.def()
    }
}

impl Related<super::person_gender::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PersonGender.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
