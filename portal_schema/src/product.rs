//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub product_id: i32,
    pub family_id: i32,
    pub name: String,
    pub summary: Option<String>,
    pub purchasable: i8,
    pub saleable: i8,
    pub saleable_without_stock: i8,
    pub signature: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::product_family::Entity",
        from = "Column::FamilyId",
        to = "super::product_family::Column::ProductFamilyId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ProductFamily,
}

impl Related<super::product_family::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductFamily.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
